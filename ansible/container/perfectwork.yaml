---
- hosts: all
  become: yes

  tasks:
    - name: Create {{ docker_PW_network }} network
      docker_network:
        name: "{{ docker_PW_network}}"

        # Prepare the PW Configuration file

    # Create the Docker Container for Application
    - name: Configure {{ PW_container_name }} PW Application Container
      docker_container:
        name: "{{ PW_container_name }}"
        image: "synercatalyst/perfectwork{{ PW_version }}:latest"
        state: started
        restart: yes
        restart_policy: always
        privileged: yes
        volumes:
          - "/var/lib/perfectwork/PW_ADDONS.{{ PW_version }}:/mnt"
          - "/var/lib/perfectwork/{{ inventory_hostname|upper }}/CONTAINERS/{{ PW_container_name }}:/var/lib/odoo"
          - "/var/lib/perfectwork/PW.{{ PW_version }}:/usr/lib/python3/dist-packages/odoo"
        networks:
          - name: "{{ docker_PW_network}}"
        networks_cli_compatible: yes
        ports:
          - "{{ PW_port }}:8069"
          - "{{ PW_polling_port }}:8072"
        env:
          HOST: "{{ PW_db_host }}"
          USER: "{{ PW_db_user }}"
          PASSWORD: "{{ PW_db_password }}"
          ODOO_RC: /var/lib/odoo/pw.conf
        labels: traefik.enable={{ traefik_enable }}
          traefik.http.routers.{{ PW_container_name }}.rule=Host(`{{ PW_domain_name }}`)
          traefik.http.routers.{{ PW_container_name }}.tls=true
          traefik.http.routers.{{ PW_container_name }}.tls.certresolver=le_resolver
          traefik.http.routers.{{ PW_container_name }}.service={{ PW_container_name }}
          traefik.http.services.{{ PW_container_name }}.loadbalancer.server.port=8069
          traefik.http.middlewares.{{ PW_container_name }}.compress=true
          traefik.http.routers.PW_2_{{ PW_container_name }}.rule=Host(`{{ PW_2_domain_name }}`)
          traefik.http.routers.PW_2_{{ PW_container_name }}.tls=true
          traefik.http.routers.PW_2_{{ PW_container_name }}.tls.certresolver=le_resolver
          traefik.http.routers.PW_2_{{ PW_container_name }}.service={{ PW_container_name }}
          traefik.http.middlewares.PW_2_{{ PW_container_name }}.compress=true
          traefik.http.routers.PW_3_{{ PW_container_name }}.rule=Host(`{{ PW_3_domain_name }}`)
          traefik.http.routers.PW_3_{{ PW_container_name }}.tls=true
          traefik.http.routers.PW_3_{{ PW_container_name }}.tls.certresolver=le_resolver
          traefik.http.routers.PW_3_{{ PW_container_name }}.service={{ PW_container_name }}
          traefik.http.middlewares.PW_3_{{ PW_container_name }}.compress=true

    # Prepare the Traefik Long Polling Configuration file
    - name: Prepare Traefik Long Polling Configuration File
      template:
        src: /opt/SysOps/config_file/templates/traefik_longpolling_config.j2
        dest: /var/lib/traefik/{{ inventory_hostname|upper }}_TRAEFIK/conf/{{ PW_domain_name }}.yaml
        mode: "0755"

    # Need to open the firewall port
    - name: Configure polling file
      ufw:
        rule: allow
        port: "{{ PW_polling_port }}"

    - name: Prepare PW Configuration File - /var/lib/odoo/pw.conf
      template:
        src: /opt/SysOps/config_file/templates/pw.conf.j2
        dest: /var/lib/perfectwork/{{ inventory_hostname|upper }}/CONTAINERS/{{ PW_container_name }}/pw.conf
        owner: "101"
        group: "102"
        mode: "0755"

    - name: Change file permission for the "/var/lib/perfectwork/{{ inventory_hostname|upper }}/CONTAINERS/{{ PW_container_name }}:/var/lib/odoo"
      command: "{{ item }}"
      with_items:
        - chown -R 101:102 /var/lib/perfectwork/{{ inventory_hostname|upper }}/CONTAINERS/{{ PW_container_name }}
        - chmod -R 766 /var/lib/perfectwork/{{ inventory_hostname|upper }}/CONTAINERS/{{ PW_container_name }}

    # Create DB user
    - name: Create DB user for PW Container on {{ db_host }} with user {{postgresql_db_admin}} and {{postgresql_db_password}}
      postgresql_user:
        login_host: "{{PW_db_hostname}}"
        login_user: "{{postgresql_db_admin}}" # From hosts/main.yaml
        login_password: "{{postgresql_db_password}}" # From hosts/main.yaml
        login_port: 1488
        name: "{{ PW_db_user }}"
        password: "{{ PW_db_password }}"
        role_attr_flags: SUPERUSER
